import crafttweaker.item.IIngredient;
import crafttweaker.item.IItemStack;

val Results = [
    <tfc:metal/nugget/bismuth>,
    <tfc:metal/nugget/bismuth_bronze>,
    <tfc:metal/nugget/black_bronze>,
    <tfc:metal/nugget/brass>,
    <tfc:metal/nugget/bronze>,
    <tfc:metal/nugget/copper>,
    <tfc:metal/nugget/gold>,
    <tfc:metal/nugget/lead>,
    <tfc:metal/nugget/nickel>,
    <tfc:metal/nugget/rose_gold>,
    <tfc:metal/nugget/silver>,
    <tfc:metal/nugget/tin>,
    <tfc:metal/nugget/zinc>,
    <tfc:metal/nugget/sterling_silver>,
    <tfc:metal/nugget/wrought_iron>,
    <tfc:metal/nugget/pig_iron>,
    <tfc:metal/nugget/steel>,
    <tfc:metal/nugget/platinum>,
    //<tfc:metal/nugget/black_steel>,
    //<tfc:metal/nugget/blue_steel>,
    //<tfc:metal/nugget/red_steel>,
    <tfc:metal/nugget/aluminium>,
    <tfc:metal/nugget/constantan>,
    <tfc:metal/nugget/electrum>,
    <tfc:metal/nugget/titanium>,
    <tfc:metal/nugget/tungsten>,
    <tfc:metal/nugget/boron>,
    <tfc:metal/nugget/duraluminium>,
    <tfc:metal/nugget/advanced_electronic_alloy>,
    <tfc:metal/nugget/zirconium>,
    <tfc:metal/nugget/magnesium>,
    <tfc:metal/nugget/lithium>,
    <tfc:metal/nugget/manganese>,
    <tfc:metal/nugget/beryllium>,
    <tfc:metal/nugget/tough>,
    <tfc:metal/nugget/hsla_steel>,
    <tfc:metal/nugget/zircaloy>,
    <tfc:metal/nugget/ferroboron>,
    <tfc:metal/nugget/magnesium_diboride>,
    <tfc:metal/nugget/mild_steel>,
    <tfc:metal/nugget/crucible_steel>
] as IItemStack [] ;

val Ingredients = [
    <tfc:metal/ingot/bismuth>,
    <tfc:metal/ingot/bismuth_bronze>,
    <tfc:metal/ingot/black_bronze>,
    <tfc:metal/ingot/brass>,
    <tfc:metal/ingot/bronze>,
    <tfc:metal/ingot/copper>,
    <tfc:metal/ingot/gold>,
    <tfc:metal/ingot/lead>,
    <tfc:metal/ingot/nickel>,
    <tfc:metal/ingot/rose_gold>,
    <tfc:metal/ingot/silver>,
    <tfc:metal/ingot/tin>,
    <tfc:metal/ingot/zinc>,
    <tfc:metal/ingot/sterling_silver>,
    <tfc:metal/ingot/wrought_iron>,
    <tfc:metal/ingot/pig_iron>,
    <tfc:metal/ingot/steel>,
    <tfc:metal/ingot/platinum>,
    //<tfc:metal/ingot/black_steel>,
    //<tfc:metal/ingot/blue_steel>,
    //<tfc:metal/ingot/red_steel>,
    <tfc:metal/ingot/aluminium>,
    <tfc:metal/ingot/constantan>,
    <tfc:metal/ingot/electrum>,
    <tfc:metal/ingot/titanium>,
    <tfc:metal/ingot/tungsten>,
    <tfc:metal/ingot/boron>,
    <tfc:metal/ingot/duraluminium>,
    <tfc:metal/ingot/advanced_electronic_alloy>,
    <tfc:metal/ingot/zirconium>,
    <tfc:metal/ingot/magnesium>,
    <tfc:metal/ingot/lithium>,
    <tfc:metal/ingot/manganese>,
    <tfc:metal/ingot/beryllium>,
    <tfc:metal/ingot/tough>,
    <tfc:metal/ingot/hsla_steel>,
    <tfc:metal/ingot/zircaloy>,
    <tfc:metal/ingot/ferroboron>,
    <tfc:metal/ingot/magnesium_diboride>,
    <tfc:metal/ingot/mild_steel>,
    <tfc:metal/ingot/crucible_steel>
] as IIngredient [];

val RegistryNames = [
    "TFC_BITSMUTH_NUGGET",
    "TFC_BITSMUTH_BRONZE_NUGGET",
    "TFC_BLACK_BRONZE_NUGGET",
    "TFC_BRASS_NUGGET",
    "TFC_BRONZE_NUGGET",
    "TFC_COPPER_NUGGET",
    "TFC_GOLD_NUGGET",
    "TFC_LEAD_NUGGET",
    "TFC_NICKEL_NUGGET",
    "TFC_ROSE_GOLD_NUGGET",
    "TFC_SILVER_NUGGET",
    "TFC_TIN_NUGGET",
    "TFC_ZINC_NUGGET",
    "TFC_STERLING_SILVER_NUGGET",
    "TFC_WROUGHT_IRON_NUGGET",
    "TFC_PIG_IRON_NUGGET",
    "TFC_STEEL_NUGGET",
    "TFC_PLATINUM_NUGGET",
    //"TFC_BLACK_STEEL_NUGGET",
    //"TFC_BLUE_STEEL_NUGGET",
    //"TFC_RED_STEEL_NUGGET",
    "TFC_ALUMNIUM_NUGGET",
    "TFC_CONSTANTAN_NUGGET",
    "TFC_ELECTRUM_NUGGET",
    "TFC_TITANIUM_NUGGET",
    "TFC_TUNGSTEN_NUGGET",
    "TFC_BORON_NUGGET",
    "TFC_DURALUMINIUM_NUGGET",
    "TFC_ADVANCED_ELECTRONIC_ALLOY_NUGGET",
    "TFC_ZIRCONIUM_NUGGET",
    "TFC_MAGNESIUM_NUGGET",
    "TFC_LITHIUM_NUGGET",
    "TFC_MANGANESE_NUGGET",
    "TFC_BERYLLIUM_NUGGET",
    "TFC_TOUGH_NUGGET",
    "TFC_HSLA_NUGGET",
    "TFC_ZIRCALOY_NUGGET",
    "TFC_FERROBORON_NUGGET",
    "TFC_MAGNESIUM_DIBORATE",
    "TFC_MILD_STEEL_NUGGET",
    "TT_CRUCIBLE_STEEL"
] as string [];

// <tfc:metal/hammer/copper>

for i in 0 to Results.length {
    recipes.addShapeless(RegistryNames[i],Results[i] * 10,[Ingredients[i],<ore:chisel>.transformDamage(5),<ore:hammer>.reuse()] as IIngredient []);
}